name: result_analysis_semantic_model
tables:
  - name: MONITORING_RESULTS
    description: This table stores monitoring results for various rules and resources,
      capturing details of the monitoring type, category, subcategory, and actions
      taken in response to monitoring events.__ # <AUTO-GENERATED DESCRIPTION, PLEASE MODIFY AND REMOVE THE __ AT THE END>
    base_table:
      database: SNOWFLAKE_MONITORING
      schema: PUBLIC
      table: MONITORING_RESULTS
    # filters:
      # - name: '  ' # <FILL-OUT>
        # synonyms:
          # - '  ' # <FILL-OUT>
        # description: '  ' # <FILL-OUT>
        # expr: '  ' # <FILL-OUT>
    dimensions:
      - name: RULE_ID
        synonyms:
          - '  ' # <FILL-OUT>
        description: Unique identifier for each monitoring rule. This is a GUID based column
        expr: RULE_ID
        data_type: TEXT
        sample_values:
          - aa7490a420f811f0ba14bd9909e9ffa7
      - name: MONITORING_TYPE
        synonyms:
          - '  ' # <FILL-OUT>
        description: Type of monitoring being performed. This could be User or Warehouse or Tables
        expr: MONITORING_TYPE
        data_type: TEXT
        sample_values:
          - Warehouse Monitoring
          - User Monitoring
      - name: CATEGORY
        synonyms:
          - '  ' # <FILL-OUT>
        description: Monitoring categories: logging, observation, query workloads, DDL operations, inactivity.
        expr: CATEGORY
        data_type: TEXT
        sample_values:
          - Query Workloads
          - Capture DDL operations on Table
          - Credit Consumption MTD
          - Observe Table Data
          - Login tracking
          - Capture DDL operations on Schema
          - Logged over weekend
          - Inactive Users
          - Logged Between X Hrs and Y Hrs
      - name: SUBCATEGORY
        synonyms:
          - '  ' # <FILL-OUT>
        description: The subcategory of monitoring events.
        expr: SUBCATEGORY
        data_type: TEXT
        sample_values:
            - Users not logged in for X days
            - Consumed More than this Credits
            - Queries Exceeding Time Limit
            - Consumed More than this % Credits
            - Logged Once
            - Logged More than this times
            - Delete or Truncate or Drop Operation
            - Tables with zero quries over time
            - Rapid access attempts from diverse IP origins
            - Create or Replace Operation
            - Concurrent Query Load By Warehouse
            - Login failures within short period of time
      - name: ACTIONS
        synonyms:
          - '  ' 
        description: Actions taken or initiated during monitoring events.
        expr: ACTIONS
        data_type: TEXT
        sample_values:
          - Email
      - name: ACTION_MESSAGE
        synonyms:
          - '  ' # <FILL-OUT>
        description: Messages describing various monitoring actions and results
        expr: ACTION_MESSAGE
        data_type: TEXT
        sample_values:
          - Lesser than credit limit
          - You have logged more than once
      - name: action_taken_indicator
        description: If any action taken the value is Yes and when no action taken the value is No
        expr: ACTION_TAKEN
        data_type: TEXT
        sample_values:
          - Yes
          - No
        name: RESOURCE_NAME
        synonyms:
          - '  ' # <FILL-OUT>
        description: Name of the monitored resource. Based on the type of monitoring this could be a User, or Warehouse or Tables
        expr: RESOURCE_NAME
        data_type: TEXT
        sample_values:
          - COMPUTE_WH_2
      - name: RULE_RUN_TIMESTAMP
        synonyms:
          - '  ' # <FILL-OUT>
        description: Timestamps representing the time when monitoring rules were last executed.
        expr: RULE_RUN_TIMESTAMP
        data_type: TIMESTAMP_NTZ
        sample_values:
          - '2025-04-24T11:56:13.946000000'
    filters:
    - name: action_taken_yes
      description: A filter to retrieve IF ANY ACTION TAKEN
      expr: action_taken_indicator = 'Yes'
    - name: action_taken_no 
      description: A filter to retrieve NO ACTION TAKEN
      expr: action_taken_indicator = 'No'
verified_queries:
  - name: How many actions are taken
    question: How many actions are taken
    verified_by: Monissha
    sql: "WITH __monitoring_results AS (SELECT action_taken, rule_run_timestamp FROM MONITORING_RESULTS) SELECT COUNT(*) AS alert_count FROM __monitoring_results WHERE action_taken = 'Yes'"
custom_instructions: "If a filter is applied on column ACTION_TAKEN, ensure that filters are either Yes or No and not true and false"
